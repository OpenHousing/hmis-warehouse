= render :partial => 'menus/admin_tabs'
- content_for :title, t('.title')
.o-page
  .o-page__header
    %h1.mt-0= content_for :title
    .o-page__action.o-page__action--stacked
      = link_to new_user_invitation_path, class: 'btn btn-primary pull-right margin-bottom-02' do
        %span.icon-plus
        Add a User Account
      = link_to 'Manage Roles', admin_roles_path
  - @prompt = t '.search_prompt'

  .o-page__controls
    .o-page__search
      = render 'search_form'
  .table-utilities
    %p= page_entries_info @users, entry_name: _('user account')
    :ruby
      columns = ['last_name', 'first_name', 'email']
      directions = current_sort_order(Hash[columns.map {|x| [x, nil]}])
      titles = {}
      directions.each {| k,v | titles[k] = @users.human_attribute_name(k)}

  .row
    .col-sm-12
      .table-responsive
        %table.table.table-condensed
          %thead
            %tr
              - titles.each do | k, title |
                %th
                  = sort_link(titles[k], k, directions)
                  %i{:class => ["fa", "fa-sort-#{directions[k]}"] }
              %th Status
              %th Roles
              %th
              %th
          %tbody
            - @users.each do |user|
              %tr
                %td= user.last_name
                %td= user.first_name
                %td
                  = user.email
                %td= render 'user_invitation_status', user: user
                %td= user.roles.map(&:name).join(', ')
                %td
                  = link_to admin_user_audit_path(user) do
                    %span.icon-eye{data: {toggle: :tooltip, title: 'Audit'}}
                %td
                  = link_to action: :edit, id: user do
                    %span.icon-pencil
                    Edit
                %td
                  = link_to admin_user_path(user),  method: :delete, data: {confirm: "Would you really like to delete the account for: #{user.name}?"} do
                    %span.icon-cross
                    Delete

      %p= paginate @users, params: {sort: directions.compact.keys.first, direction: directions.compact.values.first}
