- wrapper = if @readonly then :readonly else SimpleForm.default_wrapper end
= render 'breadcrumbs'
%h1= @data_source.name
= simple_form_for(@data_source, url: data_source_path(@data_source), wrapper: wrapper) do |f|
  .row
    .col-sm-6
      %table.table.table-condensed
        %tr
          %th Last Import Run
          %td= @data_source.last_imported_at
        %tr
          %th Date Span
          %td
            - if data_span = @data_source.data_span
              = "#{data_span[:start_date]}-#{data_span[:end_date]}"
        -if ! @data_source.authoritative? && @data_source.uploads.any? && can_view_imports?
          %tr
            %th Uploads
            %td
              = link_to data_source_uploads_path(@data_source) do
                View
        - if can_edit_data_sources?
          %tr
            %th
              Visible in the Window into the Warehouse?
            %td
              = f.input :visible_in_window, label: false
        %tr
          %th Viewable by the following users, regardless of visibility in window
          %td= @data_source.users.joins(:roles).where(roles: {can_see_clients_in_window_for_assigned_data_sources: true}).distinct.map(&:name).join(', ')
    .col-sm-6.text-right
      - if ! @data_source.authoritative? && can_upload_hud_zips?
        = link_to new_data_source_upload_path(@data_source), class: 'btn btn-primary' do
          %span.icon-plus
          Upload HUD HMIS ZIP
  - if @data_source.has_data?
    .row.table-utilities
      .col-sm-12
        %h2
          = _('Organizations')
          &amp;
          = _('Projects')
        .table-responsive
          = f.simple_fields_for :organizations, @organizations do |o|
            - org = o.object
            .c-card--flush.mb-5
              %header.row.c-card__header
                .col-sm-8
                  %h3= org.name
                  - if org.dmh
                    Treated as DMH for chronic calculations
                .col-sm-4.text-right
                  - if can_edit_organizations?
                    = link_to organization_contacts_path(organization_id: org.id) do
                      View/Edit Organization Contacts
              %table.table.table-condensed
                %thead
                  %tr
                    %th{style: 'width:30%'} Name
                    %th{style: 'width:15%'}
                      Project Type
                      %br
                      %em.small
                        Tracking Method
                    %th{style: 'width:20%'} Act as Project Type
                    %th{style: 'width:10%'}
                      HUD CoC Code
                      %br
                      CoC Code
                    %th{style: 'width:10%'}
                      HUD CoC Funded
                      %br
                      Continuum Project
                    %th{style: 'width:5%'}
                      Confidential?
                    %th{style: 'width:5%'} Site?
                    %th{style: 'width:5%'} Inventory?
                %tbody
                  = f.simple_fields_for :projects, org.projects do |proj|
                    - project = proj.object
                    %tr
                      %td
                        = link_to project.name, project_path(project)
                      %td
                        = HUD.project_type project.ProjectType
                        %br
                        %em.small
                          = HUD.tracking_method project.TrackingMethod
                      %td
                        = proj.input :act_as_project_type, collection: ::HUD.project_types.invert, include_blank: 'Use Actual Project Type', label: false
                        =# select_tag("data_source[project_attributes][#{project.id}][act_as_project_type]", options_for_select(::HUD.project_types.invert, project.act_as_project_type), {prompt: 'Use Actual Project Type', style: 'width: 10em;'})
                      %td
                        - unless @readonly
                          = proj.input :hud_coc_code, label: false, input_html: { value: project.project_cocs&.map(&:hud_coc_code).uniq.join(' ')}, wrapper_html: {class: 'mb-2'}
                        %span.o-text--italic
                          = project.project_cocs.map(&:CoCCode).join(', ')
                      %td
                        = proj.input :hud_continuum_funded, label: false, wrapper_html: {class: 'mb-2'}
                        - unless @readonly
                          = checkmark(project.ContinuumProject)
                      %td
                        = proj.input :confidential, label: false
                      %td
                        = checkmark(project.sites.present? )
                      %td
                        = checkmark(project.inventories.present? )
  - unless @readonly
    = f.button :submit, value: _('Update Data Source')
