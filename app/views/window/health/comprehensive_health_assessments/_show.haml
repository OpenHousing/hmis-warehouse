- content_for :modal_title, 'Comprehensive Health Assessment'

- if @cha.present?
  .d-flex
    .cha__summary
      %dl.mb-2
        %dt.inline Name:
        %dd.inline= @client.name
        %dd.breaker
        %dt.inline Date Completed:
        %dd.inline= @cha.completed_at&.to_date || 'in progress'
        %dd.breaker
        %dt.inline Case Worker:
        %dd.inline= @cha.user&.name

      - if @cha.reviewed_by
        %strong Supervisor Review:
        = @cha.reviewed_by&.name
    - if @cha.editable_by?(current_user)
      .ml-auto
        - if ! @cha_locked
          = link_to 'Edit', polymorphic_path([:edit] + cha_path_generator, id: @cha.id), class: 'btn btn-primary btn-primary__reverse', data: { disable_with: 'Loading...', toggle: 'tooltip' }
        - else
          .alert.alert-info
            = _('This CHA has already been reviewed, or a claim was submitted; it is no longer editable')

  %p.text-right(style="font-size:smaller;font-style:italic;")
    Only answered questions are shown.

  - @cha.answers.each do |section, section_hash|
    .client__assessment-section-summary.cha__section
      %h4= section_hash['title']

      - section_hash['answers'].sort_by{|k,_| k}.each do |code, question_answer|
        - question = question_answer['question']
        - answer   = question_answer['answer']
        - next if answer.blank? || (answer.is_a?(Array) && answer.compact.all?(&:blank?))
        - classes = [code]
        - if matches = code.match(/((l_q)1s.).*/) || code.match(/((i_q)2.).*/) || code.match(/((g_q)1.).*/)
          - classes << matches.try(:[], 1)
          - classes << matches.try(:[], 2)
        - if matches =  code.match(/(._q).+1$/) || code.match(/(._q).+a$/)
          - classes << 'clear-left'
        %div{class: classes}
          .client__assessment-question
            = question
          .client__assessment-answer
            - case answer
            - when Array
              %ul
              - answer.compact.reject(&:blank?).each do |a|
                %li= a
            - else
              - case code
              - when 'a_q5a' # SSN
                = masked_ssn answer
              - when 'a_q3' # DOB
                =l answer&.to_date
              - else
                = answer
